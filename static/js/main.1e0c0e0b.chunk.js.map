{"version":3,"sources":["components/Checkout.js","actions/payments.js","index.js"],"names":["Checkout","useState","paymentSubmitted","values","useEffect","loadPayments","fetch","method","then","response","status","json","console","error","code","catch","err","data","createDropin","paymentMethodsResponse","configuration","clientKey","locale","openFirstStoredPaymentMethod","environment","amount","value","currency","onSubmit","state","dropin","headers","Accept","body","JSON","stringify","action","handleAction","isValid","resultCode","responseHandler","Error","onAdditionalDetails","onError","paymentMethodsConfiguration","card","hasHolderName","holderNameRequired","enableStoreDetails","hideCVC","name","checkout","AdyenCheckout","create","openFirstPaymentMethod","setStatusAutomatically","mount","setStatus","message","pspReference","refusalReason","Fragment","className","test","document","location","pathname","search","window","URLSearchParams","get","getElementById","style","display","role","redirectHandler","ReactDOM","render"],"mappings":"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","file":"static/js/main.1e0c0e0b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { getPayments, makePayment, makeDetailsCall } from \"../actions/payments\";\nimport AdyenCheckout from \"@adyen/adyen-web\";\nimport \"@adyen/adyen-web/dist/adyen.css\";\n\nconst Checkout = () => {\n  const [values, setValues] = useState({\n    paymentSubmitted: false,\n  });\n\n  const { paymentSubmitted } = values;\n\n  useEffect(() => {\n    loadPayments();\n  }, [paymentSubmitted]);\n\n  const loadPayments = () => {\n    if (!paymentSubmitted) {\n      getPayments().then((data) => {\n        if (data.error) {\n          console.error(data.error);\n        } else {\n          createDropin(data.response);\n        }\n      });\n    }\n  };\n\n  const createDropin = (paymentMethodsResponse) => {\n    const configuration = {\n      paymentMethodsResponse: paymentMethodsResponse,\n      clientKey: `test_QFGJGRQZERFWNFYWKEZSQL3E342QEDNU`,\n      locale: \"en-US\",\n      openFirstStoredPaymentMethod: true,\n      environment: \"test\",\n      amount: { value: 1000, currency: \"USD\" },\n      onSubmit: (state, dropin) => {\n        makePayment(state.data)\n          .then((response) => {\n            if (response.action) {\n              dropin.handleAction(response.action);\n            } else {\n              if (state.isValid) {\n                //Here we would pass the state.data to our servers if required\n              }\n              if (response.resultCode) {\n                responseHandler(dropin, response);\n              }\n            }\n          })\n          .catch((error) => {\n            throw Error(error);\n          });\n      },\n      onAdditionalDetails: (state, dropin) => {\n        makeDetailsCall(state.data)\n          .then((response) => {\n            if (response.action) {\n              dropin.handleAction(response.action);\n            } else {\n              if (state.isValid) {\n                //Here we would pass the state.data to our servers if required\n              }\n              if (response.resultCode) {\n                responseHandler(dropin, response);\n              }\n              return null;\n            }\n          })\n          .catch((error) => {\n            throw Error(error);\n          });\n      },\n      onError: (error) => {\n        console.error(\"Adyen Error: \", error);\n      },\n      paymentMethodsConfiguration: {\n        card: {\n          hasHolderName: true,\n          holderNameRequired: true,\n          enableStoreDetails: true,\n          hideCVC: false,\n          name: \"Credit or debit card\",\n        },\n      },\n    };\n    const checkout = new AdyenCheckout(configuration);\n    try {\n      const dropin = checkout\n        .create(\"dropin\", {\n          openFirstPaymentMethod: true,\n          setStatusAutomatically: false,\n        })\n        .mount(\"#dropin-container\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const redirectHandler = () => {\n    if (/success/.test(document.location.pathname)) {\n      const search = window.location.search;\n      const params = new URLSearchParams(search);\n      const orderRef = params.get(\"orderRef\");\n\n      document.getElementById(\"dropin-container\").style.display = \"none\";\n      return (\n        <div className=\"alert alert-success mr-5 ml-5 pr-5 pl-5\" role=\"alert\">\n          Order Confirmed\n        </div>\n      );\n    } else if (/pending/.test(document.location.pathname)) {\n      document.getElementById(\"dropin-container\").style.display = \"none\";\n      return (\n        <div className=\"alert alert-warning mr-5 ml-5 pr-5 pl-5\" role=\"alert\">\n          Your order has been placed. \n        </div>\n      );\n    } else if (\n      /failed/.test(document.location.pathname) ||\n      /error/.test(document.location.pathname)\n    ) {\n      //We could pass errors in the form of query params to display the error message\n      return (\n        <div className=\"alert alert-danger mr-5 ml-5 pr-5 pl-5\" role=\"alert\">\n          Unable to place order\n        </div>\n      );\n    }\n  };\n\n  const responseHandler = (dropin, response) => {\n    if (response.resultCode === \"Authorised\") {\n      dropin.setStatus(\"success\", {\n        message: \"Payment successful! Order Ref#: \" + response.pspReference,\n      });\n    } else if (\n      response.resultCode === \"Error\" ||\n      response.resultCode === \"Refused\" ||\n      response.resultCode === \"Cancelled\"\n    ) {\n      dropin.setStatus(\"error\", {\n        message: \"Error: \" + response.refusalReason,\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <h1 className=\"text-center mt-4 mb-0\">\n        {paymentSubmitted ? \"Order Confirmation\" : \"Subscription Checkout\"}\n      </h1>\n      <hr className=\"mt-0 mb-5 ml-5 mr-5 pl-5 pr-5\" />\n      {redirectHandler()}\n    </React.Fragment>\n  );\n};\nexport default Checkout;\n","import fetch from \"isomorphic-fetch\";\n\nexport const getPayments = () => {\n  return fetch(`https://fierce-beach-07017.herokuapp.com/rest/api/GetPayment`, {\n    method: \"GET\",\n  })\n    .then((response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return response.json();\n      } else {\n        console.error(\"rest/api/GetPayments http error: \", response.code);\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const makePayment = (data) => {\n  return fetch(`https://fierce-beach-07017.herokuapp.com/rest/api/InitiatePayment`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return response.json();\n      } else {\n        console.error(\"rest/api/InitiatePayment http error: \", response.code);\n      }\n    })\n    .catch((err) => console.error(err));\n};\n\nexport const makeDetailsCall = (data) => {\n  return fetch(`https://fierce-beach-07017.herokuapp.com/rest/api/submitAdditionalDetails`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return response.json();\n      } else {\n        console.error(\n          \"rest/api/submitAdditionalDetails http error: \",\n          response.code\n        );\n      }\n    })\n    .catch((err) => console.error(err));\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Checkout from './components/Checkout';\n\nReactDOM.render(\n  <React.Fragment>\n    <Checkout/>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}